<?php

/**
* WizyTówka 5 — unit test
*/
class HTMLFormFieldsTest extends PHPUnit\Framework\TestCase
{
	public function tearDown()
	{
		$reflector = new ReflectionProperty('WizyTowka\\HTMLFormFields', '_fieldsNumber');
		$reflector->setAccessible(true);
		$reflector->setValue(-1);
		// Each field generated by HTMLFormField class must have unique ID (HTML "id" attribute) on whole page.
		// HTMLFormField class have static private property $_fieldsNumber. It is incremented for each form field.
		// Value of this property is used to make unique ID for each HTML form control and HTML label.
		// For more readability of tests below, $_fieldsNumber should be restored to default after each test.
		// It is possible to run tests in separated procceses (using @runTestsInSeparateProcesses annotation),
		// but it is slow. This dirty workaround is used to make test more readable without slowing down it.
	}

	public function testText()
	{
		$object = new WizyTowka\HTMLFormFields;
		$object->text('Example field', 'name', 'value');

		$current = (string)$object;
		$expected = '<fieldset>'
		          . '<div>'
		          . '<label for="f0">Example field</label>'
		          . '<span><input type="text" name="name" value="value" id="f0"></span>'
		          . '</div>'
		          . '</fieldset>';
		$this->assertEquals($expected, $current);
	}

	public function testNumber()
	{
		$object = new WizyTowka\HTMLFormFields;
		$object->number('Example field', 'name', 8.5, ['min' => 5, 'max' => '10']);

		$current = (string)$object;
		$expected = '<fieldset>'
		          . '<div>'
		          . '<label for="f0">Example field</label>'
		          . '<span><input min="5" max="10" type="number" name="name" value="8.5" id="f0"></span>'
		          . '</div>'
		          . '</fieldset>';
		$this->assertEquals($expected, $current);
	}

	public function testPassword()
	{
		$object = new WizyTowka\HTMLFormFields;
		$object->password('Example field', 'name', ['required' => true, 'disabled' => false]);

		$current = (string)$object;
		$expected = '<fieldset>'
		          . '<div>'
		          . '<label for="f0">Example field</label>'
		          . '<span><input required type="password" name="name" id="f0"></span>'
		          . '</div>'
		          . '</fieldset>';
		$this->assertEquals($expected, $current);
	}

	public function testCheckbox()
	{
		$object = new WizyTowka\HTMLFormFields;
		$object->checkbox('Example checkbox', 'name_1', true);
		$object->checkbox('Example checkbox', 'name_2', false);

		$current = (string)$object;
		$expected = '<fieldset>'
		          . '<div>'
		          . '<input type="checkbox" name="name_1" checked id="f0">'
		          . '<label for="f0">Example checkbox</label>'
		          . '</div>'
		          . '<div>'
		          . '<input type="checkbox" name="name_2" id="f1">'
		          . '<label for="f1">Example checkbox</label>'
		          . '</div>'
		          . '</fieldset>';
		$this->assertEquals($expected, $current);
	}

	public function testRadio()
	{
		$selectedValue = 'linux';
		$object = new WizyTowka\HTMLFormFields;
		$object->radio('I use Windows', 'operating_system', 'windows', $selectedValue);
		$object->radio('I use Linux', 'operating_system', 'linux', $selectedValue);
		$object->option('I use Mac OS', 'operating_system', 'mac_os', $selectedValue);  // "option" is an alias of "radio".

		$current = (string)$object;
		$expected = '<fieldset>'
		          . '<div>'
		          . '<input type="radio" name="operating_system" value="windows" id="f0">'
		          . '<label for="f0">I use Windows</label>'
		          . '</div>'
		          . '<div>'
		          . '<input type="radio" name="operating_system" value="linux" checked id="f1">'
		          . '<label for="f1">I use Linux</label>'
		          . '</div>'
		          . '<div>'
		          . '<input type="radio" name="operating_system" value="mac_os" id="f2">'
		          . '<label for="f2">I use Mac OS</label>'
		          . '</div>'
		          . '</fieldset>';
		$this->assertEquals($expected, $current);
	}

	public function testTextarea()
	{
		$object = new WizyTowka\HTMLFormFields;
		$object->textarea('Example field', 'name', "Line 1.\nLine 2.\nLine 3.");

		$current = (string)$object;
		$expected = '<fieldset>'
		          . '<div>'
		          . '<label for="f0">Example field</label>'
		          . '<span><textarea name="name" id="f0">'
		          . "Line 1.\nLine 2.\nLine 3."
		          . '</textarea></span>'
		          . '</div>'
		          . '</fieldset>';
		$this->assertEquals($expected, $current);
	}

	public function testSelect()
	{
		$object = new WizyTowka\HTMLFormFields;
		$object->select('Select your OS', 'operating_system', 'linux', [
			'windows' => 'Windows',
			'linux' => 'Linux',
			'mac_os' => 'Mac OS',
		]);

		$current = (string)$object;
		$expected = '<fieldset>'
		          . '<div>'
		          . '<label for="f0">Select your OS</label>'
		          . '<span><select name="operating_system" id="f0">'
		          . '<option value="windows">Windows</option>'
		          . '<option value="linux" selected>Linux</option>'
		          . '<option value="mac_os">Mac OS</option>'
		          . '</select></span>'
		          . '</div>'
		          . '</fieldset>';
		$this->assertEquals($expected, $current);
	}

	public function testTextWithHints()
	{
		$object = new WizyTowka\HTMLFormFields;
		$object->textWithHints('Select your OS', 'operating_system', '', [
			'windows' => 'Windows',
			'linux' => 'Linux',
			'mac_os' => 'Mac OS',
		]);

		$current = (string)$object;
		$expected = '<fieldset>'
		          . '<div>'
		          . '<label for="f0">Select your OS</label>'
		          . '<span>'
		          . '<datalist id="hints0">'
		          . '<option>Windows</option>'
		          . '<option>Linux</option>'
		          . '<option>Mac OS</option>'
		          . '</datalist>'
		          . '<input type="text" name="operating_system" value="" id="f0" list="hints0">'
		          . '</span>'
		          . '</div>'
		          . '</fieldset>';
		$this->assertEquals($expected, $current);
	}

	public function testRemove()
	{
		$object = new WizyTowka\HTMLFormFields('exampleCSSClass');
		$object->text('Example field 1.', 'name_1', 'value');
		$object->text('Example field 2.', 'name_2', 'value');
		$object->text('Example field 2.', 'name_2', 'value');
		$object->text('Example field 3.', 'name_3', 'value');
		$object->remove('name_2');

		$current = (string)$object;
		$expected = '<fieldset class="exampleCSSClass">'
		          . '<div>'
		          . '<label for="f0">Example field 1.</label>'
		          . '<span><input type="text" name="name_1" value="value" id="f0"></span>'
		          . '</div>'
		          . '<div>'
		          . '<label for="f1">Example field 3.</label>'
		          . '<span><input type="text" name="name_3" value="value" id="f1"></span>'
		          . '</div>'
		          . '</fieldset>';
		$this->assertEquals($expected, $current);
	}
}