<?php

/**
* WizyTÃ³wka 5
* HTML navigation menu generator with unordered list <ul>.
*/
namespace WizyTowka;

class HTMLMenu
{
	private $_listCSSClass;
	private $_elements = [];
	private $_autoPosition = 1.9;

	public function __construct($CSSClass = null)
	{
		$this->_listCSSClass = $CSSClass;
	}

	public function __debugInfo()
	{
		return $this->_elements;
	}

	public function add($label, $content, $CSSClass = null, $position = null, $newTab = false)
	{
		if (is_object($content) and (!($content instanceof $this) or $content === $this)) {
			throw new Exception('As content argument for menu element you must pass string with URL address or other instance of ' . static::class . ' class.', 26);
		}

		$this->_elements[] = [
			is_numeric($position) ? $position : $this->_autoPosition++,
			// If position number is not specified, autogenerated number from $_autoPosition is used.
			// $_autoPosition is not integer (1.9, 2.9, 3.9, 4.9 etc.) to move elements with specifed position
			// before elements without specified position (for example 1 is lower than 1.9).
			// $_elements array will be sorted by numeric value of first element of nested arrays.

			$label,
			$content,
			$CSSClass,
			$newTab,
		];

		return $this;
	}

	public function remove($label)
	{
		foreach ($this->_elements as $key => $element) {
			if ($element[1] == $label) {
				unset($this->_elements[$key]);
			}
		}

		return $this;
	}

	public function __toString()
	{
		sort($this->_elements); // Sort elements by position number.

		ob_start();

		echo '<ul', $this->_listCSSClass ? ' class="'.$this->_listCSSClass.'">' : '>';

		foreach ($this->_elements as $element) {
			echo '<li', $element[3] ? ' class="'.$element[3].'">' : '>';

			if (is_object($element[2])) {
				echo $element[1], (string)$element[2];
			}
			else {
				echo '<a href="', $element[2], '"', $element[4] ? ' target="_blank">' : '>',
					 $element[1], '</a>';
			}

			echo '</li>';
		}

		echo '</ul>';

		return ob_get_clean();
	}
}